#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = default_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 10000s ~ 3h
Scenario.endTime = 10000


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 20

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 30

## control specific settings 
# engine: If not specified, by default is "AggregattionEngine"
# nrofControllers: the number of controllers in the simulation. If not specified
# by default is 0, meaning the simulation is not running in control mode.
control.nrofControllers = 3

# Define n different node groups
Scenario.nrofHostGroups = 5

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite
# type: Set to "controller" if the node is a controller. If this setting is not 
# specified, which is the default case, the node is not a controller.

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement



# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
#Group.router = EpidemicRouter
Group.router = SprayAndWaitRouter
#Group.router = ProphetRouter
Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 2
Group.interface1 = highspeedInterface
Group.interface2 = btInterface
# Walking speeds
Group.speed = 0.5, 0.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300
Group.sendQueue = FIFO

Group.nrofHosts = 40
Group.groupID = pedestrians
#Group.radius = 1000
Group.radius = 300
Group.centerzonex = 2585
Group.centerzoney = 686

# group1 (controller) specific settings
Group1.groupID = controller0
Group1.type = controller
Group1.nrofHosts = 1
Group1.nrofInterfaces = 1
Group1.interface1 = highspeedInterface
Group1.centerzonex = 2494
Group1.centerzoney = 790


Group2.groupID = controller1
Group2.type = controller
Group2.nrofHosts = 1
Group2.nrofInterfaces = 1
Group2.interface1 = highspeedInterface
Group2.centerzonex = 2452
Group2.centerzoney = 843

Group3.groupID = controller2
Group3.type = controller
Group3.nrofHosts = 1
Group3.nrofInterfaces = 1
Group3.interface1 = highspeedInterface
Group3.centerzonex = 1684
Group3.centerzoney = 1017

# group4 (pedestrians) specific settings
Group4.groupID = engineer
Group4.centerzonex = 2452
Group4.centerzoney = 843

Group4.groupID = medicina
Group4.centerzonex = 1684
Group4.centerzoney = 1017

Group4.groupID = filosofia
Group4.centerzonex = 2071
Group4.centerzoney = 549

Group5.groupID = sociologia
Group5.centerzonex = 1980
Group5.centerzoney = 645


## Message creation parameters 
# How many event generators
Events.nrof = 3
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 5,10
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,162
Events1.tohosts = 0,162
# Message ID prefix
Events1.prefix = M

# Class of the second event generator
Events2.class = MetricMessageGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds
Events2.interval = 10
# Nodes sending metrics
Events2.hosts = 3,162
# Controllers
Events2.tohosts = 0,3
# Message ID prefix
Events2.prefix = S

# Class of the third event generator
Events3.class = ControlMessageGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds
Events3.interval = 20
# Controllers sending directives
Events3.hosts = 0,3
# Nodes receiving directives
Events3.tohosts = 3,162
# Message ID prefix
Events3.prefix = C


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 1

MapBasedMovement.mapFile1 = data/uab.osm.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ControlStatsReport

## Default settings for some routers settings
#epidemic
#Report.reportDir = reports/epidemic

#sprayandwait
SprayAndWaitRouter.nrofCopies = [1;10;20;30;40;50;60;70;80;90;100]
SprayAndWaitRouter.binaryMode = true
Report.reportDir = [reports/spray/1; reports/spray/10; reports/spray/20; reports/spray/30; reports/spray/40; reports/spray/50; reports/spray/60; reports/spray/70; reports/spray/80; reports/spray/90; reports/spray/100]

#prophet
#ProphetRouter.secondsInTimeUnit = 30
#ProphetRouter.beta= [0.0;0.1;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1]
#Report.reportDir = [reports/prophet/beta00;reports/prophet/beta01;reports/prophet/beta02;reports/prophet/beta03;reports/prophet/beta04;reports/prophet/beta05;reports/prophet/beta06;reports/prophet/beta07;reports/prophet/beta08;reports/prophet/beta09;reports/prophet/beta1;]


## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true

ProphetRouter.secondsInTimeUnit = 30

# Define POI data files


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$

